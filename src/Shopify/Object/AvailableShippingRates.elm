-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Object.AvailableShippingRates exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Shopify.InputObject
import Shopify.Interface
import Shopify.Object
import Shopify.Scalar
import Shopify.ScalarCodecs
import Shopify.Union


{-| Whether or not the shipping rates are ready.
The `shippingRates` field is `null` when this value is `false`.
This field should be polled until its value becomes `true`.
-}
ready : SelectionSet Bool Shopify.Object.AvailableShippingRates
ready =
    Object.selectionForField "Bool" "ready" [] Decode.bool


{-| The fetched shipping rates. `null` until the `ready` field is `true`.
-}
shippingRates :
    SelectionSet decodesTo Shopify.Object.ShippingRate
    -> SelectionSet (Maybe (List decodesTo)) Shopify.Object.AvailableShippingRates
shippingRates object____ =
    Object.selectionForCompositeField "shippingRates" [] object____ (Basics.identity >> Decode.list >> Decode.nullable)
