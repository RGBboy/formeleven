-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Object.Fulfillment exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Shopify.InputObject
import Shopify.Interface
import Shopify.Object
import Shopify.Scalar
import Shopify.ScalarCodecs
import Shopify.Union


type alias FulfillmentLineItemsOptionalArguments =
    { first : OptionalArgument Int
    , after : OptionalArgument String
    , last : OptionalArgument Int
    , before : OptionalArgument String
    , reverse : OptionalArgument Bool
    }


{-| List of the fulfillment's line items.

  - first - Returns up to the first `n` elements from the list.
  - after - Returns the elements that come after the specified cursor.
  - last - Returns up to the last `n` elements from the list.
  - before - Returns the elements that come before the specified cursor.
  - reverse - Reverse the order of the underlying list.

-}
fulfillmentLineItems :
    (FulfillmentLineItemsOptionalArguments -> FulfillmentLineItemsOptionalArguments)
    -> SelectionSet decodesTo Shopify.Object.FulfillmentLineItemConnection
    -> SelectionSet decodesTo Shopify.Object.Fulfillment
fulfillmentLineItems fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, after = Absent, last = Absent, before = Absent, reverse = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "reverse" filledInOptionals____.reverse Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "fulfillmentLineItems" optionalArgs____ object____ Basics.identity


{-| The name of the tracking company.
-}
trackingCompany : SelectionSet (Maybe String) Shopify.Object.Fulfillment
trackingCompany =
    Object.selectionForField "(Maybe String)" "trackingCompany" [] (Decode.string |> Decode.nullable)


type alias TrackingInfoOptionalArguments =
    { first : OptionalArgument Int }


{-| Tracking information associated with the fulfillment,
such as the tracking number and tracking URL.

  - first - Truncate the array result to this size.

-}
trackingInfo :
    (TrackingInfoOptionalArguments -> TrackingInfoOptionalArguments)
    -> SelectionSet decodesTo Shopify.Object.FulfillmentTrackingInfo
    -> SelectionSet (List decodesTo) Shopify.Object.Fulfillment
trackingInfo fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "trackingInfo" optionalArgs____ object____ (Basics.identity >> Decode.list)
