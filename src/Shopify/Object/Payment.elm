-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Object.Payment exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Shopify.InputObject
import Shopify.Interface
import Shopify.Object
import Shopify.Scalar
import Shopify.ScalarCodecs
import Shopify.Union


{-| The amount of the payment.
-}
amount : SelectionSet Shopify.ScalarCodecs.Money Shopify.Object.Payment
amount =
    Object.selectionForField "ScalarCodecs.Money" "amount" [] (Shopify.ScalarCodecs.codecs |> Shopify.Scalar.unwrapCodecs |> .codecMoney |> .decoder)


{-| The amount of the payment.
-}
amountV2 :
    SelectionSet decodesTo Shopify.Object.MoneyV2
    -> SelectionSet decodesTo Shopify.Object.Payment
amountV2 object____ =
    Object.selectionForCompositeField "amountV2" [] object____ Basics.identity


{-| The billing address for the payment.
-}
billingAddress :
    SelectionSet decodesTo Shopify.Object.MailingAddress
    -> SelectionSet (Maybe decodesTo) Shopify.Object.Payment
billingAddress object____ =
    Object.selectionForCompositeField "billingAddress" [] object____ (Basics.identity >> Decode.nullable)


{-| The checkout to which the payment belongs.
-}
checkout :
    SelectionSet decodesTo Shopify.Object.Checkout
    -> SelectionSet decodesTo Shopify.Object.Payment
checkout object____ =
    Object.selectionForCompositeField "checkout" [] object____ Basics.identity


{-| The credit card used for the payment in the case of direct payments.
-}
creditCard :
    SelectionSet decodesTo Shopify.Object.CreditCard
    -> SelectionSet (Maybe decodesTo) Shopify.Object.Payment
creditCard object____ =
    Object.selectionForCompositeField "creditCard" [] object____ (Basics.identity >> Decode.nullable)


{-| A message describing a processing error during asynchronous processing.
-}
errorMessage : SelectionSet (Maybe String) Shopify.Object.Payment
errorMessage =
    Object.selectionForField "(Maybe String)" "errorMessage" [] (Decode.string |> Decode.nullable)


{-| A globally-unique identifier.
-}
id : SelectionSet Shopify.ScalarCodecs.Id Shopify.Object.Payment
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Shopify.ScalarCodecs.codecs |> Shopify.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| A client-side generated token to identify a payment and perform idempotent operations.
For more information, refer to
[Idempotent requests](https://shopify.dev/api/usage/idempotent-requests).
-}
idempotencyKey : SelectionSet (Maybe String) Shopify.Object.Payment
idempotencyKey =
    Object.selectionForField "(Maybe String)" "idempotencyKey" [] (Decode.string |> Decode.nullable)


{-| The URL where the customer needs to be redirected so they can complete the 3D Secure payment flow.
-}
nextActionUrl : SelectionSet (Maybe Shopify.ScalarCodecs.Url) Shopify.Object.Payment
nextActionUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Url)" "nextActionUrl" [] (Shopify.ScalarCodecs.codecs |> Shopify.Scalar.unwrapCodecs |> .codecUrl |> .decoder |> Decode.nullable)


{-| Whether the payment is still processing asynchronously.
-}
ready : SelectionSet Bool Shopify.Object.Payment
ready =
    Object.selectionForField "Bool" "ready" [] Decode.bool


{-| A flag to indicate if the payment is to be done in test mode for gateways that support it.
-}
test : SelectionSet Bool Shopify.Object.Payment
test =
    Object.selectionForField "Bool" "test" [] Decode.bool


{-| The actual transaction recorded by Shopify after having processed the payment with the gateway.
-}
transaction :
    SelectionSet decodesTo Shopify.Object.Transaction
    -> SelectionSet (Maybe decodesTo) Shopify.Object.Payment
transaction object____ =
    Object.selectionForCompositeField "transaction" [] object____ (Basics.identity >> Decode.nullable)
