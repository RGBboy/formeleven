-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Object.Customer exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Shopify.Enum.OrderSortKeys
import Shopify.InputObject
import Shopify.Interface
import Shopify.Object
import Shopify.Scalar
import Shopify.ScalarCodecs
import Shopify.Union


{-| Indicates whether the customer has consented to be sent marketing material via email.
-}
acceptsMarketing : SelectionSet Bool Shopify.Object.Customer
acceptsMarketing =
    Object.selectionForField "Bool" "acceptsMarketing" [] Decode.bool


type alias AddressesOptionalArguments =
    { first : OptionalArgument Int
    , after : OptionalArgument String
    , last : OptionalArgument Int
    , before : OptionalArgument String
    , reverse : OptionalArgument Bool
    }


{-| A list of addresses for the customer.

  - first - Returns up to the first `n` elements from the list.
  - after - Returns the elements that come after the specified cursor.
  - last - Returns up to the last `n` elements from the list.
  - before - Returns the elements that come before the specified cursor.
  - reverse - Reverse the order of the underlying list.

-}
addresses :
    (AddressesOptionalArguments -> AddressesOptionalArguments)
    -> SelectionSet decodesTo Shopify.Object.MailingAddressConnection
    -> SelectionSet decodesTo Shopify.Object.Customer
addresses fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, after = Absent, last = Absent, before = Absent, reverse = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "reverse" filledInOptionals____.reverse Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "addresses" optionalArgs____ object____ Basics.identity


{-| The date and time when the customer was created.
-}
createdAt : SelectionSet Shopify.ScalarCodecs.DateTime Shopify.Object.Customer
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Shopify.ScalarCodecs.codecs |> Shopify.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The customer’s default address.
-}
defaultAddress :
    SelectionSet decodesTo Shopify.Object.MailingAddress
    -> SelectionSet (Maybe decodesTo) Shopify.Object.Customer
defaultAddress object____ =
    Object.selectionForCompositeField "defaultAddress" [] object____ (Basics.identity >> Decode.nullable)


{-| The customer’s name, email or phone number.
-}
displayName : SelectionSet String Shopify.Object.Customer
displayName =
    Object.selectionForField "String" "displayName" [] Decode.string


{-| The customer’s email address.
-}
email : SelectionSet (Maybe String) Shopify.Object.Customer
email =
    Object.selectionForField "(Maybe String)" "email" [] (Decode.string |> Decode.nullable)


{-| The customer’s first name.
-}
firstName : SelectionSet (Maybe String) Shopify.Object.Customer
firstName =
    Object.selectionForField "(Maybe String)" "firstName" [] (Decode.string |> Decode.nullable)


{-| A unique identifier for the customer.
-}
id : SelectionSet Shopify.ScalarCodecs.Id Shopify.Object.Customer
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Shopify.ScalarCodecs.codecs |> Shopify.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The customer's most recently updated, incomplete checkout.
-}
lastIncompleteCheckout :
    SelectionSet decodesTo Shopify.Object.Checkout
    -> SelectionSet (Maybe decodesTo) Shopify.Object.Customer
lastIncompleteCheckout object____ =
    Object.selectionForCompositeField "lastIncompleteCheckout" [] object____ (Basics.identity >> Decode.nullable)


{-| The customer’s last name.
-}
lastName : SelectionSet (Maybe String) Shopify.Object.Customer
lastName =
    Object.selectionForField "(Maybe String)" "lastName" [] (Decode.string |> Decode.nullable)


type alias MetafieldRequiredArguments =
    { namespace : String
    , key : String
    }


{-| Returns a metafield found by namespace and key.

  - namespace - A container for a set of metafields.
  - key - The identifier for the metafield.

-}
metafield :
    MetafieldRequiredArguments
    -> SelectionSet decodesTo Shopify.Object.Metafield
    -> SelectionSet (Maybe decodesTo) Shopify.Object.Customer
metafield requiredArgs____ object____ =
    Object.selectionForCompositeField "metafield" [ Argument.required "namespace" requiredArgs____.namespace Encode.string, Argument.required "key" requiredArgs____.key Encode.string ] object____ (Basics.identity >> Decode.nullable)


type alias MetafieldsRequiredArguments =
    { identifiers : List Shopify.InputObject.HasMetafieldsIdentifier }


{-| The metafields associated with the resource matching the supplied list of namespaces and keys.

  - identifiers - The list of metafields to retrieve by namespace and key.

-}
metafields :
    MetafieldsRequiredArguments
    -> SelectionSet decodesTo Shopify.Object.Metafield
    -> SelectionSet (List (Maybe decodesTo)) Shopify.Object.Customer
metafields requiredArgs____ object____ =
    Object.selectionForCompositeField "metafields" [ Argument.required "identifiers" requiredArgs____.identifiers (Shopify.InputObject.encodeHasMetafieldsIdentifier |> Encode.list) ] object____ (Basics.identity >> Decode.nullable >> Decode.list)


type alias OrdersOptionalArguments =
    { first : OptionalArgument Int
    , after : OptionalArgument String
    , last : OptionalArgument Int
    , before : OptionalArgument String
    , reverse : OptionalArgument Bool
    , sortKey : OptionalArgument Shopify.Enum.OrderSortKeys.OrderSortKeys
    , query : OptionalArgument String
    }


{-| The orders associated with the customer.

  - first - Returns up to the first `n` elements from the list.
  - after - Returns the elements that come after the specified cursor.
  - last - Returns up to the last `n` elements from the list.
  - before - Returns the elements that come before the specified cursor.
  - reverse - Reverse the order of the underlying list.
  - sortKey - Sort the underlying list by the given key.
  - query - Supported filter parameters:
  - `processed_at`

See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
for more information about using filters.

-}
orders :
    (OrdersOptionalArguments -> OrdersOptionalArguments)
    -> SelectionSet decodesTo Shopify.Object.OrderConnection
    -> SelectionSet decodesTo Shopify.Object.Customer
orders fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, after = Absent, last = Absent, before = Absent, reverse = Absent, sortKey = Absent, query = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "reverse" filledInOptionals____.reverse Encode.bool, Argument.optional "sortKey" filledInOptionals____.sortKey (Encode.enum Shopify.Enum.OrderSortKeys.toString), Argument.optional "query" filledInOptionals____.query Encode.string ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "orders" optionalArgs____ object____ Basics.identity


{-| The customer’s phone number.
-}
phone : SelectionSet (Maybe String) Shopify.Object.Customer
phone =
    Object.selectionForField "(Maybe String)" "phone" [] (Decode.string |> Decode.nullable)


{-| A comma separated list of tags that have been added to the customer.
Additional access scope required: unauthenticated\_read\_customer\_tags.
-}
tags : SelectionSet (List String) Shopify.Object.Customer
tags =
    Object.selectionForField "(List String)" "tags" [] (Decode.string |> Decode.list)


{-| The date and time when the customer information was updated.
-}
updatedAt : SelectionSet Shopify.ScalarCodecs.DateTime Shopify.Object.Customer
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Shopify.ScalarCodecs.codecs |> Shopify.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)
