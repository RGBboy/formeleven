-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Object.SellingPlanAllocation exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Shopify.InputObject
import Shopify.Interface
import Shopify.Object
import Shopify.Scalar
import Shopify.ScalarCodecs
import Shopify.Union


{-| The checkout charge amount due for the purchase.
-}
checkoutChargeAmount :
    SelectionSet decodesTo Shopify.Object.MoneyV2
    -> SelectionSet decodesTo Shopify.Object.SellingPlanAllocation
checkoutChargeAmount object____ =
    Object.selectionForCompositeField "checkoutChargeAmount" [] object____ Basics.identity


{-| A list of price adjustments, with a maximum of two. When there are two, the first price adjustment goes into effect at the time of purchase, while the second one starts after a certain number of orders. A price adjustment represents how a selling plan affects pricing when a variant is purchased with a selling plan. Prices display in the customer's currency if the shop is configured for it.
-}
priceAdjustments :
    SelectionSet decodesTo Shopify.Object.SellingPlanAllocationPriceAdjustment
    -> SelectionSet (List decodesTo) Shopify.Object.SellingPlanAllocation
priceAdjustments object____ =
    Object.selectionForCompositeField "priceAdjustments" [] object____ (Basics.identity >> Decode.list)


{-| The remaining balance charge amount due for the purchase.
-}
remainingBalanceChargeAmount :
    SelectionSet decodesTo Shopify.Object.MoneyV2
    -> SelectionSet decodesTo Shopify.Object.SellingPlanAllocation
remainingBalanceChargeAmount object____ =
    Object.selectionForCompositeField "remainingBalanceChargeAmount" [] object____ Basics.identity


{-| A representation of how products and variants can be sold and purchased. For example, an individual selling plan could be '6 weeks of prepaid granola, delivered weekly'.
-}
sellingPlan :
    SelectionSet decodesTo Shopify.Object.SellingPlan
    -> SelectionSet decodesTo Shopify.Object.SellingPlanAllocation
sellingPlan object____ =
    Object.selectionForCompositeField "sellingPlan" [] object____ Basics.identity
