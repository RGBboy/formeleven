-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Object.StoreAvailability exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Shopify.InputObject
import Shopify.Interface
import Shopify.Object
import Shopify.Scalar
import Shopify.ScalarCodecs
import Shopify.Union


{-| Whether the product variant is in-stock at this location.
-}
available : SelectionSet Bool Shopify.Object.StoreAvailability
available =
    Object.selectionForField "Bool" "available" [] Decode.bool


{-| The location where this product variant is stocked at.
-}
location :
    SelectionSet decodesTo Shopify.Object.Location
    -> SelectionSet decodesTo Shopify.Object.StoreAvailability
location object____ =
    Object.selectionForCompositeField "location" [] object____ Basics.identity


{-| Returns the estimated amount of time it takes for pickup to be ready (Example: Usually ready in 24 hours).
-}
pickUpTime : SelectionSet String Shopify.Object.StoreAvailability
pickUpTime =
    Object.selectionForField "String" "pickUpTime" [] Decode.string
