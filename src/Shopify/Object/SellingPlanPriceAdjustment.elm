-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Object.SellingPlanPriceAdjustment exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Shopify.InputObject
import Shopify.Interface
import Shopify.Object
import Shopify.Scalar
import Shopify.ScalarCodecs
import Shopify.Union


{-| The type of price adjustment. An adjustment value can have one of three types: percentage, amount off, or a new price.
-}
adjustmentValue :
    SelectionSet decodesTo Shopify.Union.SellingPlanPriceAdjustmentValue
    -> SelectionSet decodesTo Shopify.Object.SellingPlanPriceAdjustment
adjustmentValue object____ =
    Object.selectionForCompositeField "adjustmentValue" [] object____ Basics.identity


{-| The number of orders that the price adjustment applies to If the price adjustment always applies, then this field is `null`.
-}
orderCount : SelectionSet (Maybe Int) Shopify.Object.SellingPlanPriceAdjustment
orderCount =
    Object.selectionForField "(Maybe Int)" "orderCount" [] (Decode.int |> Decode.nullable)
