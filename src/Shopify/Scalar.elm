-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Scalar exposing (Codecs, DateTime(..), Decimal(..), Html(..), Id(..), Json(..), Money(..), Url(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type DateTime
    = DateTime String


type Decimal
    = Decimal String


type Html
    = Html String


type Id
    = Id String


type Json
    = Json String


type Money
    = Money String


type Url
    = Url String


defineCodecs :
    { codecDateTime : Codec valueDateTime
    , codecDecimal : Codec valueDecimal
    , codecHtml : Codec valueHtml
    , codecId : Codec valueId
    , codecJson : Codec valueJson
    , codecMoney : Codec valueMoney
    , codecUrl : Codec valueUrl
    }
    -> Codecs valueDateTime valueDecimal valueHtml valueId valueJson valueMoney valueUrl
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueDateTime valueDecimal valueHtml valueId valueJson valueMoney valueUrl
    ->
        { codecDateTime : Codec valueDateTime
        , codecDecimal : Codec valueDecimal
        , codecHtml : Codec valueHtml
        , codecId : Codec valueId
        , codecJson : Codec valueJson
        , codecMoney : Codec valueMoney
        , codecUrl : Codec valueUrl
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueDateTime valueDecimal valueHtml valueId valueJson valueMoney valueUrl -> Codec getterValue)
    -> Codecs valueDateTime valueDecimal valueHtml valueId valueJson valueMoney valueUrl
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueDateTime valueDecimal valueHtml valueId valueJson valueMoney valueUrl
    = Codecs (RawCodecs valueDateTime valueDecimal valueHtml valueId valueJson valueMoney valueUrl)


type alias RawCodecs valueDateTime valueDecimal valueHtml valueId valueJson valueMoney valueUrl =
    { codecDateTime : Codec valueDateTime
    , codecDecimal : Codec valueDecimal
    , codecHtml : Codec valueHtml
    , codecId : Codec valueId
    , codecJson : Codec valueJson
    , codecMoney : Codec valueMoney
    , codecUrl : Codec valueUrl
    }


defaultCodecs : RawCodecs DateTime Decimal Html Id Json Money Url
defaultCodecs =
    { codecDateTime =
        { encoder = \(DateTime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map DateTime
        }
    , codecDecimal =
        { encoder = \(Decimal raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Decimal
        }
    , codecHtml =
        { encoder = \(Html raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Html
        }
    , codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    , codecJson =
        { encoder = \(Json raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Json
        }
    , codecMoney =
        { encoder = \(Money raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Money
        }
    , codecUrl =
        { encoder = \(Url raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Url
        }
    }
