-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.MediaContentType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible content types for a media object.

  - ExternalVideo - An externally hosted video.
  - Image - A Shopify hosted image.
  - Model3d - A 3d model.
  - Video - A Shopify hosted video.

-}
type MediaContentType
    = ExternalVideo
    | Image
    | Model3d
    | Video


list : List MediaContentType
list =
    [ ExternalVideo, Image, Model3d, Video ]


decoder : Decoder MediaContentType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "EXTERNAL_VIDEO" ->
                        Decode.succeed ExternalVideo

                    "IMAGE" ->
                        Decode.succeed Image

                    "MODEL_3D" ->
                        Decode.succeed Model3d

                    "VIDEO" ->
                        Decode.succeed Video

                    _ ->
                        Decode.fail ("Invalid MediaContentType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : MediaContentType -> String
toString enum____ =
    case enum____ of
        ExternalVideo ->
            "EXTERNAL_VIDEO"

        Image ->
            "IMAGE"

        Model3d ->
            "MODEL_3D"

        Video ->
            "VIDEO"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe MediaContentType
fromString enumString____ =
    case enumString____ of
        "EXTERNAL_VIDEO" ->
            Just ExternalVideo

        "IMAGE" ->
            Just Image

        "MODEL_3D" ->
            Just Model3d

        "VIDEO" ->
            Just Video

        _ ->
            Nothing
