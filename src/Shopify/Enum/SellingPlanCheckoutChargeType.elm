-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.SellingPlanCheckoutChargeType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The checkout charge when the full amount isn't charged at checkout.

  - Percentage - The checkout charge is a percentage of the product or variant price.
  - Price - The checkout charge is a fixed price amount.

-}
type SellingPlanCheckoutChargeType
    = Percentage
    | Price


list : List SellingPlanCheckoutChargeType
list =
    [ Percentage, Price ]


decoder : Decoder SellingPlanCheckoutChargeType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "PERCENTAGE" ->
                        Decode.succeed Percentage

                    "PRICE" ->
                        Decode.succeed Price

                    _ ->
                        Decode.fail ("Invalid SellingPlanCheckoutChargeType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : SellingPlanCheckoutChargeType -> String
toString enum____ =
    case enum____ of
        Percentage ->
            "PERCENTAGE"

        Price ->
            "PRICE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe SellingPlanCheckoutChargeType
fromString enumString____ =
    case enumString____ of
        "PERCENTAGE" ->
            Just Percentage

        "PRICE" ->
            Just Price

        _ ->
            Nothing
