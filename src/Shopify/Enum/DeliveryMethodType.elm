-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.DeliveryMethodType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| List of different delivery method types.

  - Shipping - Shipping.
  - PickUp - Local Pickup.
  - Retail - Retail.
  - Local - Local Delivery.
  - PickupPoint - Shipping to a Pickup Point.
  - None - None.

-}
type DeliveryMethodType
    = Shipping
    | PickUp
    | Retail
    | Local
    | PickupPoint
    | None


list : List DeliveryMethodType
list =
    [ Shipping, PickUp, Retail, Local, PickupPoint, None ]


decoder : Decoder DeliveryMethodType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "SHIPPING" ->
                        Decode.succeed Shipping

                    "PICK_UP" ->
                        Decode.succeed PickUp

                    "RETAIL" ->
                        Decode.succeed Retail

                    "LOCAL" ->
                        Decode.succeed Local

                    "PICKUP_POINT" ->
                        Decode.succeed PickupPoint

                    "NONE" ->
                        Decode.succeed None

                    _ ->
                        Decode.fail ("Invalid DeliveryMethodType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : DeliveryMethodType -> String
toString enum____ =
    case enum____ of
        Shipping ->
            "SHIPPING"

        PickUp ->
            "PICK_UP"

        Retail ->
            "RETAIL"

        Local ->
            "LOCAL"

        PickupPoint ->
            "PICKUP_POINT"

        None ->
            "NONE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe DeliveryMethodType
fromString enumString____ =
    case enumString____ of
        "SHIPPING" ->
            Just Shipping

        "PICK_UP" ->
            Just PickUp

        "RETAIL" ->
            Just Retail

        "LOCAL" ->
            Just Local

        "PICKUP_POINT" ->
            Just PickupPoint

        "NONE" ->
            Just None

        _ ->
            Nothing
