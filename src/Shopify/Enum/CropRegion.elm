-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.CropRegion exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The part of the image that should remain after cropping.

  - Center - Keep the center of the image.
  - Top - Keep the top of the image.
  - Bottom - Keep the bottom of the image.
  - Left - Keep the left of the image.
  - Right - Keep the right of the image.

-}
type CropRegion
    = Center
    | Top
    | Bottom
    | Left
    | Right


list : List CropRegion
list =
    [ Center, Top, Bottom, Left, Right ]


decoder : Decoder CropRegion
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "CENTER" ->
                        Decode.succeed Center

                    "TOP" ->
                        Decode.succeed Top

                    "BOTTOM" ->
                        Decode.succeed Bottom

                    "LEFT" ->
                        Decode.succeed Left

                    "RIGHT" ->
                        Decode.succeed Right

                    _ ->
                        Decode.fail ("Invalid CropRegion type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : CropRegion -> String
toString enum____ =
    case enum____ of
        Center ->
            "CENTER"

        Top ->
            "TOP"

        Bottom ->
            "BOTTOM"

        Left ->
            "LEFT"

        Right ->
            "RIGHT"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe CropRegion
fromString enumString____ =
    case enumString____ of
        "CENTER" ->
            Just Center

        "TOP" ->
            Just Top

        "BOTTOM" ->
            Just Bottom

        "LEFT" ->
            Just Left

        "RIGHT" ->
            Just Right

        _ ->
            Nothing
