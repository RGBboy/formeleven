-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.DiscountApplicationAllocationMethod exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The method by which the discount's value is allocated onto its entitled lines.

  - Across - The value is spread across all entitled lines.
  - Each - The value is applied onto every entitled line.
  - One - The value is specifically applied onto a particular line.

-}
type DiscountApplicationAllocationMethod
    = Across
    | Each
    | One


list : List DiscountApplicationAllocationMethod
list =
    [ Across, Each, One ]


decoder : Decoder DiscountApplicationAllocationMethod
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ACROSS" ->
                        Decode.succeed Across

                    "EACH" ->
                        Decode.succeed Each

                    "ONE" ->
                        Decode.succeed One

                    _ ->
                        Decode.fail ("Invalid DiscountApplicationAllocationMethod type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : DiscountApplicationAllocationMethod -> String
toString enum____ =
    case enum____ of
        Across ->
            "ACROSS"

        Each ->
            "EACH"

        One ->
            "ONE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe DiscountApplicationAllocationMethod
fromString enumString____ =
    case enumString____ of
        "ACROSS" ->
            Just Across

        "EACH" ->
            Just Each

        "ONE" ->
            Just One

        _ ->
            Nothing
