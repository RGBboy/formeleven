-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.OrderCancelReason exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Represents the reason for the order's cancellation.

  - Customer - The customer wanted to cancel the order.
  - Fraud - The order was fraudulent.
  - Inventory - There was insufficient inventory.
  - Declined - Payment was declined.
  - Other - The order was canceled for an unlisted reason.

-}
type OrderCancelReason
    = Customer
    | Fraud
    | Inventory
    | Declined
    | Other


list : List OrderCancelReason
list =
    [ Customer, Fraud, Inventory, Declined, Other ]


decoder : Decoder OrderCancelReason
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "CUSTOMER" ->
                        Decode.succeed Customer

                    "FRAUD" ->
                        Decode.succeed Fraud

                    "INVENTORY" ->
                        Decode.succeed Inventory

                    "DECLINED" ->
                        Decode.succeed Declined

                    "OTHER" ->
                        Decode.succeed Other

                    _ ->
                        Decode.fail ("Invalid OrderCancelReason type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : OrderCancelReason -> String
toString enum____ =
    case enum____ of
        Customer ->
            "CUSTOMER"

        Fraud ->
            "FRAUD"

        Inventory ->
            "INVENTORY"

        Declined ->
            "DECLINED"

        Other ->
            "OTHER"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe OrderCancelReason
fromString enumString____ =
    case enumString____ of
        "CUSTOMER" ->
            Just Customer

        "FRAUD" ->
            Just Fraud

        "INVENTORY" ->
            Just Inventory

        "DECLINED" ->
            Just Declined

        "OTHER" ->
            Just Other

        _ ->
            Nothing
