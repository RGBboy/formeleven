-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.DiscountApplicationTargetType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The type of line (i.e. line item or shipping line) on an order that the discount is applicable towards.

  - LineItem - The discount applies onto line items.
  - ShippingLine - The discount applies onto shipping lines.

-}
type DiscountApplicationTargetType
    = LineItem
    | ShippingLine


list : List DiscountApplicationTargetType
list =
    [ LineItem, ShippingLine ]


decoder : Decoder DiscountApplicationTargetType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "LINE_ITEM" ->
                        Decode.succeed LineItem

                    "SHIPPING_LINE" ->
                        Decode.succeed ShippingLine

                    _ ->
                        Decode.fail ("Invalid DiscountApplicationTargetType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : DiscountApplicationTargetType -> String
toString enum____ =
    case enum____ of
        LineItem ->
            "LINE_ITEM"

        ShippingLine ->
            "SHIPPING_LINE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe DiscountApplicationTargetType
fromString enumString____ =
    case enumString____ of
        "LINE_ITEM" ->
            Just LineItem

        "SHIPPING_LINE" ->
            Just ShippingLine

        _ ->
            Nothing
