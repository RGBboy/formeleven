-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.MenuItemType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| A menu item type.

  - Frontpage - A frontpage link.
  - Collection - A collection link.
  - Collections - A collection link.
  - Product - A product link.
  - Catalog - A catalog link.
  - Page - A page link.
  - Blog - A blog link.
  - Article - An article link.
  - Search - A search link.
  - ShopPolicy - A shop policy link.
  - Http - An http link.

-}
type MenuItemType
    = Frontpage
    | Collection
    | Collections
    | Product
    | Catalog
    | Page
    | Blog
    | Article
    | Search
    | ShopPolicy
    | Http


list : List MenuItemType
list =
    [ Frontpage, Collection, Collections, Product, Catalog, Page, Blog, Article, Search, ShopPolicy, Http ]


decoder : Decoder MenuItemType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "FRONTPAGE" ->
                        Decode.succeed Frontpage

                    "COLLECTION" ->
                        Decode.succeed Collection

                    "COLLECTIONS" ->
                        Decode.succeed Collections

                    "PRODUCT" ->
                        Decode.succeed Product

                    "CATALOG" ->
                        Decode.succeed Catalog

                    "PAGE" ->
                        Decode.succeed Page

                    "BLOG" ->
                        Decode.succeed Blog

                    "ARTICLE" ->
                        Decode.succeed Article

                    "SEARCH" ->
                        Decode.succeed Search

                    "SHOP_POLICY" ->
                        Decode.succeed ShopPolicy

                    "HTTP" ->
                        Decode.succeed Http

                    _ ->
                        Decode.fail ("Invalid MenuItemType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : MenuItemType -> String
toString enum____ =
    case enum____ of
        Frontpage ->
            "FRONTPAGE"

        Collection ->
            "COLLECTION"

        Collections ->
            "COLLECTIONS"

        Product ->
            "PRODUCT"

        Catalog ->
            "CATALOG"

        Page ->
            "PAGE"

        Blog ->
            "BLOG"

        Article ->
            "ARTICLE"

        Search ->
            "SEARCH"

        ShopPolicy ->
            "SHOP_POLICY"

        Http ->
            "HTTP"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe MenuItemType
fromString enumString____ =
    case enumString____ of
        "FRONTPAGE" ->
            Just Frontpage

        "COLLECTION" ->
            Just Collection

        "COLLECTIONS" ->
            Just Collections

        "PRODUCT" ->
            Just Product

        "CATALOG" ->
            Just Catalog

        "PAGE" ->
            Just Page

        "BLOG" ->
            Just Blog

        "ARTICLE" ->
            Just Article

        "SEARCH" ->
            Just Search

        "SHOP_POLICY" ->
            Just ShopPolicy

        "HTTP" ->
            Just Http

        _ ->
            Nothing
