-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Shopify.Enum.LocationSortKeys exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The set of valid sort keys for the Location query.

  - Id - Sort by the `id` value.
  - Name - Sort by the `name` value.
  - City - Sort by the `city` value.
  - Distance - Sort by the `distance` value.

-}
type LocationSortKeys
    = Id
    | Name
    | City
    | Distance


list : List LocationSortKeys
list =
    [ Id, Name, City, Distance ]


decoder : Decoder LocationSortKeys
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ID" ->
                        Decode.succeed Id

                    "NAME" ->
                        Decode.succeed Name

                    "CITY" ->
                        Decode.succeed City

                    "DISTANCE" ->
                        Decode.succeed Distance

                    _ ->
                        Decode.fail ("Invalid LocationSortKeys type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : LocationSortKeys -> String
toString enum____ =
    case enum____ of
        Id ->
            "ID"

        Name ->
            "NAME"

        City ->
            "CITY"

        Distance ->
            "DISTANCE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe LocationSortKeys
fromString enumString____ =
    case enumString____ of
        "ID" ->
            Just Id

        "NAME" ->
            Just Name

        "CITY" ->
            Just City

        "DISTANCE" ->
            Just Distance

        _ ->
            Nothing
